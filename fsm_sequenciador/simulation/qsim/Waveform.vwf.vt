// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/02/2018 10:47:55"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          fsm_sequenciador
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module fsm_sequenciador_vlg_vec_tst();
// constants                                           
// general purpose registers
reg A;
reg Bi2;
reg Bi3;
reg Bi5;
reg Bi6;
reg Bi7;
reg clk;
// wires                                               
wire B0;
wire B1;
wire B2;
wire B3;
wire B4;
wire B5;
wire B6;
wire B7;

// assign statements (if any)                          
fsm_sequenciador i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B0(B0),
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.B4(B4),
	.B5(B5),
	.B6(B6),
	.B7(B7),
	.Bi2(Bi2),
	.Bi3(Bi3),
	.Bi5(Bi5),
	.Bi6(Bi6),
	.Bi7(Bi7),
	.clk(clk)
);
initial 
begin 
#1000000 $finish;
end 

// A
initial
begin
	repeat(12)
	begin
		A = 1'b0;
		A = #40000 1'b1;
		# 40000;
	end
	A = 1'b0;
end 

// Bi2
initial
begin
	Bi2 = 1'b1;
end 

// Bi3
initial
begin
	Bi3 = 1'b1;
end 

// Bi5
initial
begin
	Bi5 = 1'b1;
end 

// Bi6
initial
begin
	Bi6 = 1'b1;
end 

// Bi7
initial
begin
	Bi7 = 1'b1;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	#10000;
end 
endmodule

