// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "10/02/2018 08:36:23"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module test_demux (
	A,
	sel,
	B,
	C,
	D,
	E,
	F);
output 	A;
input 	[2:0] sel;
output 	B;
output 	C;
output 	D;
output 	E;
output 	F;

// Design Ports Information
// A	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_39,	 I/O Standard: 2.5 V,	 Current Strength: Default
// C	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D	=>  Location: PIN_7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// E	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// F	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[0]	=>  Location: PIN_24,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[2]	=>  Location: PIN_25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[1]	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("test_demux_v.sdo");
// synopsys translate_on

wire \A~output_o ;
wire \B~output_o ;
wire \C~output_o ;
wire \D~output_o ;
wire \E~output_o ;
wire \F~output_o ;
wire \sel[2]~input_o ;
wire \sel[0]~input_o ;
wire \sel[1]~input_o ;
wire \inst|Equal0~0_combout ;
wire \inst|Equal0~1_combout ;
wire \inst|Equal0~2_combout ;
wire \inst|Equal0~3_combout ;
wire \inst|Equal0~4_combout ;
wire \inst|Equal0~5_combout ;


// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \A~output (
	.i(\inst|Equal0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A~output_o ),
	.obar());
// synopsys translate_off
defparam \A~output .bus_hold = "false";
defparam \A~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \B~output (
	.i(\inst|Equal0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\B~output_o ),
	.obar());
// synopsys translate_off
defparam \B~output .bus_hold = "false";
defparam \B~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y9_N9
cycloneive_io_obuf \C~output (
	.i(\inst|Equal0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C~output_o ),
	.obar());
// synopsys translate_off
defparam \C~output .bus_hold = "false";
defparam \C~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N9
cycloneive_io_obuf \D~output (
	.i(\inst|Equal0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\D~output_o ),
	.obar());
// synopsys translate_off
defparam \D~output .bus_hold = "false";
defparam \D~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N16
cycloneive_io_obuf \E~output (
	.i(\inst|Equal0~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\E~output_o ),
	.obar());
// synopsys translate_off
defparam \E~output .bus_hold = "false";
defparam \E~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \F~output (
	.i(\inst|Equal0~5_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F~output_o ),
	.obar());
// synopsys translate_off
defparam \F~output .bus_hold = "false";
defparam \F~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneive_io_ibuf \sel[2]~input (
	.i(sel[2]),
	.ibar(gnd),
	.o(\sel[2]~input_o ));
// synopsys translate_off
defparam \sel[2]~input .bus_hold = "false";
defparam \sel[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \sel[0]~input (
	.i(sel[0]),
	.ibar(gnd),
	.o(\sel[0]~input_o ));
// synopsys translate_off
defparam \sel[0]~input .bus_hold = "false";
defparam \sel[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N15
cycloneive_io_ibuf \sel[1]~input (
	.i(sel[1]),
	.ibar(gnd),
	.o(\sel[1]~input_o ));
// synopsys translate_off
defparam \sel[1]~input .bus_hold = "false";
defparam \sel[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N24
cycloneive_lcell_comb \inst|Equal0~0 (
// Equation(s):
// \inst|Equal0~0_combout  = (!\sel[2]~input_o  & (!\sel[0]~input_o  & !\sel[1]~input_o ))

	.dataa(\sel[2]~input_o ),
	.datab(\sel[0]~input_o ),
	.datac(gnd),
	.datad(\sel[1]~input_o ),
	.cin(gnd),
	.combout(\inst|Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Equal0~0 .lut_mask = 16'h0011;
defparam \inst|Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N26
cycloneive_lcell_comb \inst|Equal0~1 (
// Equation(s):
// \inst|Equal0~1_combout  = (!\sel[2]~input_o  & (\sel[0]~input_o  & !\sel[1]~input_o ))

	.dataa(\sel[2]~input_o ),
	.datab(\sel[0]~input_o ),
	.datac(gnd),
	.datad(\sel[1]~input_o ),
	.cin(gnd),
	.combout(\inst|Equal0~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Equal0~1 .lut_mask = 16'h0044;
defparam \inst|Equal0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N12
cycloneive_lcell_comb \inst|Equal0~2 (
// Equation(s):
// \inst|Equal0~2_combout  = (!\sel[2]~input_o  & (!\sel[0]~input_o  & \sel[1]~input_o ))

	.dataa(\sel[2]~input_o ),
	.datab(\sel[0]~input_o ),
	.datac(gnd),
	.datad(\sel[1]~input_o ),
	.cin(gnd),
	.combout(\inst|Equal0~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Equal0~2 .lut_mask = 16'h1100;
defparam \inst|Equal0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N6
cycloneive_lcell_comb \inst|Equal0~3 (
// Equation(s):
// \inst|Equal0~3_combout  = (!\sel[2]~input_o  & (\sel[0]~input_o  & \sel[1]~input_o ))

	.dataa(\sel[2]~input_o ),
	.datab(\sel[0]~input_o ),
	.datac(gnd),
	.datad(\sel[1]~input_o ),
	.cin(gnd),
	.combout(\inst|Equal0~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Equal0~3 .lut_mask = 16'h4400;
defparam \inst|Equal0~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N8
cycloneive_lcell_comb \inst|Equal0~4 (
// Equation(s):
// \inst|Equal0~4_combout  = (\sel[2]~input_o  & (!\sel[0]~input_o  & !\sel[1]~input_o ))

	.dataa(\sel[2]~input_o ),
	.datab(\sel[0]~input_o ),
	.datac(gnd),
	.datad(\sel[1]~input_o ),
	.cin(gnd),
	.combout(\inst|Equal0~4_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Equal0~4 .lut_mask = 16'h0022;
defparam \inst|Equal0~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N18
cycloneive_lcell_comb \inst|Equal0~5 (
// Equation(s):
// \inst|Equal0~5_combout  = (\sel[2]~input_o  & (\sel[0]~input_o  & !\sel[1]~input_o ))

	.dataa(\sel[2]~input_o ),
	.datab(\sel[0]~input_o ),
	.datac(gnd),
	.datad(\sel[1]~input_o ),
	.cin(gnd),
	.combout(\inst|Equal0~5_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Equal0~5 .lut_mask = 16'h0088;
defparam \inst|Equal0~5 .sum_lutc_input = "datac";
// synopsys translate_on

assign A = \A~output_o ;

assign B = \B~output_o ;

assign C = \C~output_o ;

assign D = \D~output_o ;

assign E = \E~output_o ;

assign F = \F~output_o ;

endmodule
